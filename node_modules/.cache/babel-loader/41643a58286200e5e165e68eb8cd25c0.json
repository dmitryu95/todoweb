{"ast":null,"code":"import { Network } from \"../components/Network\";\nimport { action, makeObservable, observable } from 'mobx';\n\nclass NoteStore {\n  constructor() {\n    this.title = '';\n    this.id = 'TPFLWDVXcM6cYAgfr4whZ7z7K5GkxWQYepQCQQ1nObWNN6z2L4N0cJg3Utk42H5Z';\n    this.listOfItems = [\"TEST\"];\n    makeObservable(this, {\n      title: observable,\n      id: observable,\n      listOfItems: observable,\n      addNewNote: action.bound,\n      setTitle: action.bound,\n      setListOfItems: action.bound\n    });\n  }\n\n  setListOfItems() {\n    Network('tasks?access_token=', this.id, 'GET').then(result => {\n      this.listOfItems = result;\n      console.log(\"проверка\", this.listOfItems.map(item => item.title));\n      this;\n    });\n  }\n\n  setTitle(text) {\n    this.title = text.target.value;\n  }\n\n  addNewNote() {\n    Network('tasks?access_token=', this.id, 'POST', {\n      title: this.title\n    });\n    setTimeout(this.setListOfItems, 200);\n    this.title = ' ';\n  }\n\n}\n\nexport const StoreTodo = new NoteStore();","map":{"version":3,"sources":["/Users/dmitriyu/Documents/todoweb/src/source/stores/NoteStore.js"],"names":["Network","action","makeObservable","observable","NoteStore","constructor","title","id","listOfItems","addNewNote","bound","setTitle","setListOfItems","then","result","console","log","map","item","text","target","value","setTimeout","StoreTodo"],"mappings":"AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAAQC,MAAR,EAAgBC,cAAhB,EAAgCC,UAAhC,QAAiD,MAAjD;;AAEA,MAAMC,SAAN,CAAgB;AACZC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAc,EAAd;AACA,SAAKC,EAAL,GAAU,kEAAV;AACA,SAAKC,WAAL,GAAmB,CAAC,MAAD,CAAnB;AAEIN,IAAAA,cAAc,CAAC,IAAD,EAAO;AACjBI,MAAAA,KAAK,EAAEH,UADU;AAEjBI,MAAAA,EAAE,EAAEJ,UAFa;AAGjBK,MAAAA,WAAW,EAAEL,UAHI;AAIjBM,MAAAA,UAAU,EAAER,MAAM,CAACS,KAJF;AAKjBC,MAAAA,QAAQ,EAAEV,MAAM,CAACS,KALA;AAMjBE,MAAAA,cAAc,EAAEX,MAAM,CAACS;AANN,KAAP,CAAd;AAQP;;AAEDE,EAAAA,cAAc,GAAG;AACbZ,IAAAA,OAAO,CAAC,qBAAD,EAAwB,KAAKO,EAA7B,EAAiC,KAAjC,CAAP,CAA+CM,IAA/C,CAAoDC,MAAM,IAAI;AAC1D,WAAKN,WAAL,GAAmBM,MAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKR,WAAL,CAAiBS,GAAjB,CAAqBC,IAAI,IAAIA,IAAI,CAACZ,KAAlC,CAAxB;AACA;AAED,KALH;AAMH;;AAEDK,EAAAA,QAAQ,CAACQ,IAAD,EAAO;AACX,SAAKb,KAAL,GAAaa,IAAI,CAACC,MAAL,CAAYC,KAAzB;AACH;;AAEDZ,EAAAA,UAAU,GAAG;AACTT,IAAAA,OAAO,CAAC,qBAAD,EAAwB,KAAKO,EAA7B,EAAiC,MAAjC,EAAyC;AAACD,MAAAA,KAAK,EAAE,KAAKA;AAAb,KAAzC,CAAP;AACAgB,IAAAA,UAAU,CAAC,KAAKV,cAAN,EAAsB,GAAtB,CAAV;AACA,SAAKN,KAAL,GAAa,GAAb;AACH;;AAjCW;;AAoChB,OAAO,MAAMiB,SAAS,GAAG,IAAInB,SAAJ,EAAlB","sourcesContent":["import { Network } from \"../components/Network\";\nimport {action, makeObservable, observable} from 'mobx';\n\nclass NoteStore {\n    constructor() {\n        this.title =  '';\n        this.id = 'TPFLWDVXcM6cYAgfr4whZ7z7K5GkxWQYepQCQQ1nObWNN6z2L4N0cJg3Utk42H5Z';\n        this.listOfItems = [\"TEST\"];\n        \n            makeObservable(this, {\n                title: observable,\n                id: observable,\n                listOfItems: observable,\n                addNewNote: action.bound,\n                setTitle: action.bound, \n                setListOfItems: action.bound,\n            })\n    }\n \n    setListOfItems() {\n        Network('tasks?access_token=', this.id, 'GET').then(result => {\n            this.listOfItems = result\n            console.log(\"проверка\", this.listOfItems.map(item => item.title));\n            this\n           \n          })\n    }\n\n    setTitle(text) {\n        this.title = text.target.value;\n    }\n\n    addNewNote() {\n        Network('tasks?access_token=', this.id, 'POST', {title: this.title});\n        setTimeout(this.setListOfItems, 200);\n        this.title = ' '\n    }\n}\n\nexport const StoreTodo = new NoteStore();"]},"metadata":{},"sourceType":"module"}